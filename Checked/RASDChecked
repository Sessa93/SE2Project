INTRODUCTION
  Purpose
    This document represent the Requirement Analysis and Specification Document
    (RASD). The main goal of this document is to completely describe the system
    in terms of functional and non-functional requirements, to show the constraints and the limit
    of the software and simulate the typical use cases that will occur after the
    development. This document is intended to all developer and programmer who
    have to implement the requirements, to system analyst who want to integrate
    other system with this one, and could be used as a contractual basis between
    the customer and the developer.

  Scope of the project
    The aim of this project is to develop MyTaxiService, a web/mobile application that makes easier and quicker taking taxies.
    Thanks to MyTaxiService, anyone can request or book a taxi and get realtime information
    about how long it will take to be picked up or about taxi's current position and code.
    In addition, MyTaxiService provides an efficient way to allocate taxies by dividing the
    city in zones and using a queue based allocation system, in order to reduce the
    waiting time and city's traffic.

  Goals
    In this subsection we describe a set of high level goals that MyTaxiService is proposed to achieve.

    1. Simplify and speed up the process of taking a taxi

      1.1 When a registered user has entered his taxi ride details and clicks or taps
      the "REQUEST TAXI" button, MyTaxiService will find the first
      available taxi that fits for the inserted ride details, and this taxi will
      pick up the user as soon as possible

      1.2 When a registered user has entered his booking details and clicks or taps
        the "BOOK TAXI" button, MyTaxiService will book a taxi that fits for the
        inserted booking details and for the indicated pick up time

    2. Guarantee an efficient and fair management of taxi queues

      2.2 Guarantee a balanced distribution of taxies in the city, in order
      to have always taxies available for different city zones

      2.3 Guarantee short taxi availability times and short waiting times

  Assumptions
    1. MyTaxiService has been commissioned by the city local government.
      Taxi drivers that work in the city can join MyTaxiService via a registration to be
      done in the local government public transport office.
      During this registration process taxi drivers are asked to provide their personal and vehicle data along with their work timetable.
      After that taxi drivers receive a unique code that identifies their taxi cab in relation to MyTaxiService.
      To make MyTaxiService functional, the local government provides each mtaxi with a device similar to a small navigator(MYT), which is used
      to see incoming ride requests or bookings and to signal their acceptance; this device has a built in gps module through which MyTaxiService can
      track their position
    2. The registration of taxies to MyTaxyService is done manually by the local government public transportation
    officiers by inserting records in a db accessed by MyTaxyService, hence in this document that process is
    not modelled
    3. Since MyTaxiService is aware of the work timetable of each mtaxi, mtaxies are considered unavailable
      if and only if they are serving a ride/booking request.  After a mtaxi has finished serving a passenger, its driver has to notify
      MyTaxiService(B) of the event, so MyTaxiService(B) will consider the mtaxi available again.
      Considering that MyTaxiService(B) knows the position of each mtaxi and the destination of each ride, there's no chance a mtaxi driver
      can cheat by not signaling he hasn't completed a ride yet.

    4. A mtaxi might have an accident, if that happens, its driver can report it and therefore
       be considered unavailable

    5. Once a registered user sends a ride request, he or she cannot change any detail of the request nor can
        undo the request(FR)

    6. MyTaxiService(B) is aware of the characteristics of each mtaxies (number of passengers, unique code)

    7. MyTaxiService(B) is aware of all the possible valid location in the city, so a registered user that wants to request a ride or a booking is forced to select one among them.

    8. Mtaxies can accept only ride request/booking within the city borders

    9. Mtaxies can only serve only ride/booking requests forwarded by MyTaxiService(B)

    9. Using gps data from the mtaxies and public traffic data, MyTaxyService(B) can balance the assigment
    of the request so that  .... (RF)

  Terms and definitions
      - MyTaxiService(B) : The back end of MyTaxiService, that is to say, those software components
        that manage the forwarding of ride / booking requests to the mtaxi drivers, the search of available mtaxies compatible with the received ride/booking requests, and other internal
        tasks not exposed to user or the mtaxi drivers
      - Mtaxi: a taxi whose driver has joined MyTaxyService
      - Ride request: An electronic message sent by a registered user
        to MyTaxiService(B). This electronic message refers to the case in which the registered user wants to be picked up as soon as possible by a mtaxi
      - Booking request: An electronic message sent by a registered user
         to MyTaxiService(B). This electronic message refers to the case in which the registered user wants to be picked up by a mtaxi at a specific time
      - Mtaxy booking: when a registered user wants to be picked up by a mtaxi at a specific time
      - MYT: the device the local government provides to taxi drivers that has registered to MyTaxiService. This
      device integrates a client for MyTaxiService that the is used by the mtaxi driver to see ride/booking requests and zone change orderds, accept
      these requests and report accidents
      - A mtaxi is available: a mtaxi has finished serving a passenger and is ready for a new ride
      - Zone: An area of the city
      - Credentials: A combination of username and password, used by a registered user to access the MyTaxiService application
      - Mtaxi ride: A movement of people, through a taxi cab, from one geographical point to another
      - Queue: A data structure managed with a FIFO policy.
      - User: A person who wants to take a taxi and is not registered to MyTaxiService.
      - Registered User: A person who is not a mtaxy driver, who needs to take a taxi and is registered to MyTaxiService.
      - Visitor: A generic person not registered to MyTaxiService
      - Ride/booking request acceptance: a mtaxi has left in oder to pick up registered user that has requested a ride or that
        has booked a ride
    Acronyms
      - RASD: Requirements Analysis and Specification Document
      - FIFO: First In First Out

    Reference Documents
      - Specification Document: MyTaxiService-AA2015-2016.pdf
      - IEEE Std 830-1998 IEEE Recommended Practice for Software Requirements Specifications.
      - IEEE Std 1016 tm -2009 Standard for Information Tecnology-System Design-Software Design Descriptions.
      PRELIMINARY ASSUMPTIONS



REQUIREMENTS SPECIFICATION
    Functional requirements
      - A person must not be already registered to MyTaxiService in order perform the registration process
      - During the registration process, a visitor must choose a username not already used by another user.
      - A Visitor can only access to the MyTaxiService registration form.
      - Registered users cannot sign up twice but only once for session.
      - The login is successful iff the user inserts the correct credentials
      - The user, after a successful login can submit a taxi request
      - The user, after a successful login can submit a taxi reservation
      - The registered users can undo only reservations
      - The registered users can  undo a reservation only 10 minutes before the inserted
      picking up time
      - MyTaxiService has to allow multiple mtaxi bookings by the same registered user
      - MyTaxiService has not to allow multiple ride requests by the same registered user
      - MyTaxiService has to be able to force a registered user to chose as locations only valid city's locations
      (MyTaxiService has to be able to force a registered user to chose among a list of only valid city's locations )
      - MyTaxiService(B) can accept only ride requests that specify a starting location, an ending location
      and a number of passengers
      - MyTaxiService(B) has to be able, using the gps data of the mtaxies and public data about the city's, to understand the
      traffic situation of the city zone per zone
      - MyTaxiService(B) has to be able, using the gps data of the mtaxies, to analyse the mtaxies'
      distribution among the different city's zone and understand if there's the need to change this
      distribution in relation to the average number of ride /booking requests per city's zone.
      If there's this need, MyTaxiService(B) has to be able to send change zone order to mtaxies
      - MyTaxiService(B) has to be able, using the gps data of the mtaxies, to analyse the mtaxies'
      distribution among the different city's zone and build the queues used to forward ride / booking
      requests
      - MyTaxiService(B) has to be able to manage a situation in which a mtaxi does not accept a ride / booking request within a fixed time.
      In this situation MyTaxiService has to find a new mtaxi to forward the request
      - MyTaxiDriver has to manage the forwarding of ride / booking requests using a queue based system and
      a division of the city in zone: foreach city's zone a queue of available mtaxies is associated,
      MyTaxiDriver(B) forward a ride/booking request to head of the queue that corresponds to the city's
      zone of the starting location of the ride
      - Only logged registered users must have access to all the functionalities of MyTaxiService
      - Non logged people have access only to the registration functionality of MyTaxiService
      - MyTaxiService app and website must have the same functionalities

    2.3) NON FUNCTIONAL REQUIREMENTS
      [NFR1] The system has to guarantee that a taxi arrives at the origin of the ride within a fixed time(NF)
      [NFR2] The taxi driver waits for the passenger that has requested the ride at the origin point for a maximum amount of time, after that the taxi returns available(NF)
      [NFR3] A taxi driver has to accept or not a request within a fixed time, otherwise another taxi is selected by myTaxiService(B)
      [NFR4] After a failure myTaxiService(B) has to be restarted within 1 hour
      [NFR5] myTaxiService must be available 24h/7d
      [NFR6] myTaxiService has as target users taxi driver and people who use the city taxi service
      [] The systems divides the city in zones


      [NFR7] Users are able to properly use all the functionalities after a training time of at most 15 mins
      [NFR8] All the functionalities have be reached by the user with at most 3 clicks/taps from the starting page


SCENARIOS, USE CASES AND UML MODELS
    Actors(see Terms and Definitions section)
      - Visitor
      - Registered User
      - Mtaxi driver
      - MyTaxiService(B)

    Use cases of the application

      1. A registered user makes a ride request
        [Actors]: A registered user, MyTaxiService(B)
        [Pre-cons]: The registered user has logged into MyTaxiService.
        [Post-cons]: MyTaxiService(B) receives the ride request and tries to find an available taxi to fulfill it.
        [Entry Cnd]: A registered user wants to be picked up by a mtaxi as soon as possible in given place.
        [Exit Cnd]: The registered is acknowledge that MyTaxiService(B) has received successfully the ride
        request
        [Exceptions]:
          - Connection lost on the smartphone: the registered user is immediately notified of the fact and
          he can only check the last retrieved status of his ride request
        [Flow of events]:
          - The registered user taps/clicks the "REQUEST TAXI" button
          - The registered user is redirected to a screen dedicated to the insertion
          of the requested ride's details
          - The registered user fills out a form for the ride request inserting the ride's starting and ending location
          and the number of passengers and th.
          - The registered user submits to MyTaxiService(B) the form by clicking/tapping the "CONFIRM REQUEST" button
        [Special Requirements]:
          - The registered user must be acknowledged that MyTaxiService(B) has received successfully the ride request
          within 1 min

      --------------------------------------------------------------------------------

      2. A registered user makes a booking request
         [Actors]: A registered user, MyTaxiService(B)
         [Pre-cons]: The registered user has logged into MyTaxiService.
         [Post-cons]: MyTaxiService(B) receives the booking request and registers it; 10 mins before
         the chosen picking up time, MyTaxiService(B) will try to find an available taxi to fullfill the request.
         [Entry Cnd]: A registered user wants to be picked up by a mtaxi at a precise moment.
         [Exit Cnd]: MyTaxiService(F) is informed that MyTaxiService(B) has received successfully the ride
         request
         [Exceptions]:
           - Connection lost on the smartphone: MyTaxiService(F) immediately notifies the registered user with the last
           available status information for the requested booking
         [Flow of events]:
           - The registered user taps/clicks the "BOOK TAXI" button on the home screen of the app / website
           - The registered user is redirected to a screen dedicated to the insertion
           of the requested booking details
           - The registered user fills out a form for the booking request, inserting the ride's starting and ending location,
           the number of passengers, the day and the time for which be picked up.
           - The registered user submits to MyTaxiService(B) the form by clicking/tapping the "CONFIRM BOOKING" button
         [Special Requirements]:
           - The registered user must be acknowledged that MyTaxiService(B) has received successfully the booking request
           within 1 min

      --------------------------------------------------------------------------------

      3. MyTaxiService(B) forwards a received ride request to a mtaxi driver
        [Actors]: A mtaxi driver, MyTaxiService(B)
        [Pre-cons]: The mtaxi driver has informed MyTaxiService(B) that he has finished serving a passenger and so is
        ready for a new ride
        [Post-cons]: The mtaxi driver knows that a passenger has requested a ride with the specified
        details and is ready to fulfill it
        [Entry Cnd]: MyTaxService(B) has received a ride request from a registered user
        [Exit Cnd]: MyTaxiService(B) is acknowledged that the mtaxy driver has received successfully the ride request
        (this is automatically done by the MyTaxiService client installed in MYT)
        [Exceptions]:
          - No mtaxi is available for city zone relative to the ride request: MyTaxyService(B) tries
          to find a mtaxi that fits the ride request details(in terms of number of passengers) and that is located in the city zones adjacent
          to the one above mentioned
          - No mtaxi available: MyTaxyService(B) notifies the registered user that made the request that
          no mtaxi is available and that he should try again to request a ride later
          - No ackacknowledge from the mtaxi driver the ride request has been forwarded to: MyTaxiService(B) tries to find a new mtaxi to fulfill
          the request
        [Flow of Events]:
          - MyTaxyService(B) extracts the city zone relative to the starting location of the ride request
          - MyTaxyService(B) selects a mtaxi that suits the ride requests details (in terms of number of passengers) from the queue of available mtaxies
            for the city zone above mentioned
          - MyTaxyService(B) checks if the traffic conditions in the zone where the selected mtaxi is located are acceptable
          (they allow the mtaxy to reach the registered user to pick up within a fixed time)
          - MyTaxyService(B) forwards the ride request to the driver of the selected mtaxi


      -------------------------------------------------------------------------------

      4. A mtaxi driver informs MyTaxiService(B) that he has finished serving a passenger
        [Actors]: A mtaxi driver, MyTaxiService(B)
        [Pre-cons]: The mtaxi current location is the ending location of his last ride
        [Post-cons]: MyTaxiService(B) considers the mtaxi available
        [Entry Cnd]: The mtaxi driver has finished serving a passenger
        [Exit Cnd]: The mtaxy driver is acknowledged that MyTaxiService(B) has received successfully his
        notification
        [Exceptions]:
          - Connection Lost: the mtaxi driver is immediately notified by the MyTaxiService client, who suggests to try again the operation
          later.
        [Flow of Events]:
          - The mtaxi driver taps the "END RIDE" button on the screen of his MYT and so notifies MyTaxiService(B) that
          he has ended serving a passenger and is now available for other ride/booking requests
        [Special Requirements]:
          - The mtaxy driver must be acknowledged that MyTaxiService(B) has received successfully his
          notification within 1 min


      --------------------------------------------------------------------------------

      5. A mtaxi driver manages a ride request from MyTaxiService(B)
        [Actors]: A mtaxi driver, MyTaxiService(B)
        [Pre cons]: The mtaxi has to be available
        [Post cons]: The mtaxy driver has started driving to the starting location of the requested ride
        [Entry Cnd]: MyTaxiService(B) has forwarded successfully a ride request to the mtaxy driver
        [Exit Cnd]: The mtaxy driver is acknowledged that MyTaxiService(B) has received successfully his notification
        of ride acceptance.
        [Exceptions]:
          - If MyTaxyService(B) does not receive the acceptance of the ride request by the mtaxy driver
          within 5 mins, it selects another mtaxi to fullfil the request, and signals to the supervisors
          of the mtaxi driver in discussion his behavior
        [Flow of Events]:
          - The mtaxi driver taps the "SERVE REQUEST" button on the screen of his MYT, and so notifies MyTaxiService(B)
          that he's going to take immediately care of the request


      --------------------------------------------------------------------------------

      6. A registered user logs into MyTaxyService
        [Actors]: A registered user, MyTaxiService(B)
        [Pre Cnd]: The registered user is not logged into MyTaxyService. The registered
        user has access to the MyTaxyService app or website
        [Post Cnd]: The registered user has access to all the functionalities of
        MyTaxyService
        [Entry Cnd]: The registered user wants to access the functionalities offered by MyTaxyService
        [Exit Cnd]:  The registered user is acknowledged that MyTaxiService(B) has recognized as valid the inserted
        credentials. MyTaxyService(B) will grant the registered user the access to all the functionalities
        of the application.
        [Exceptions]:
          - Connection Lost: the registered user is immediately notified of the event
          - Wrong Credentials: the registered user is asked to insert his credentials again
        [Flow of Events]:
          - The registered user opens the MyTaxyService app or access the MyTaxyService website, and a login
          screen is shown, along with the option to register to the service
          - The registered user inserts his credentials in the relative fields
          - The registered user clicks/taps the "LOGIN" button

      --------------------------------------------------------------------------------

      7. A registered user logs out from MyTaxyService
        [Actors]: A registered user, MyTaxyService(B)
        [Pre cons]: The registerd user is logged into MyTaxyService
        [Post cons]: The registered user has no access to MyTaxyService functionalities
        until a new login
        [Entry Cnd]: The registered user wants to logout from MyTaxiService
        [Exit Cnd]: The registered user is acknowledged that MyTaxiService(B) has logged him out from
        the service
        [Exceptions]:
          - Connection Lost: the registered user is immediately notified of the event
        [Flow of Events]:
          - The registered user taps/clicks the "LOGOUT" button on a screen of the app / website
          (every screen of the app /website has the "LOGOUT" button)

      --------------------------------------------------------------------------------

      8. A Visitor wants to register to MyTaxiService
        [Actors]: A visitor, myTaxiService(B)
        [Pre cons]: The visitor has access to the MyTaxyService app or website
        [Post cons]: The visitor becomes a registered user
        [Entry Cnd]: The visitor wants to register to MyTaxiService in order
        to access its functionalities
        [Exit Cnd]: The visitor is acknowledged that MyTaxiService(B) has registered him
        [Exceptions]:
          - Connection Lost: the visitor is immediately notified of the event
          - Invalid data: the visitor is immediately notified and forced to insert valid data
        [Flow of Events]:
          - The visitor opens the MyTaxyService app or access the MyTaxyService website, and a login
            screen is shown, along with the option to register to the service
          - The visitor taps/click the "REGISTER TO THE SERVICE" button
          - The visitor is redirected to a screen with a form to be filled out with Name, Surname, email a password.
          The visitor fills the form
          - The visitor press the "CONFIRM BUTTON" and so submits the form to MyTaxyService(B)

      --------------------------------------------------------------------------------


      9. A registered user undos a mtaxy booking
        [Actors]: A registered user, MyTaxiService(B)
        [Pre cons]: The registered user is logged into MyTaxiService. The registered user
        has made a successful booking request. The mtaxy booking the registered user wants to undo
        specifies a pickup time so that pickuptime - currentime > 10 mins
        [Post cons]: The scheduled booking is no more
        [Entry Cnd]: The registered user wants to undo a mtaxy booking
        [Exit Cnd]: MyTaxiService(B) acknowledges the registered user that the scheduled booking
        has been deleted
        [Exceptions]:
          - Connection Lost: the registered user is immediatly notified of the event
        [Flow of Events]:
          - The registered user access the MyTaxyService app/website area where he can see the list of his bookings
          - The registered user taps/click the recycle bin icon located in the row that corresponds to the mtaxy booking
          he wants to undo
          - The registered user confirm his choice by clicking/tapping the "CONFIRM" button on
          the popup that has just apparead

      --------------------------------------------------------------------------------

      {10. A mtaxi driver receives a zone change order
        [Actors]: A mtaxi driver, MyTaxiService(B)
        [Pre cons]: The mtaxi is available
        [Post cons]: The distribution of the mtaxies in the city's zones is more balanced
        with respect to the average number of ride requests per zone
        [Entry Cnd]: MyTaxiService(B) has detected that some city's zones have too much mtaxies assigned
        and some others not, all with respect to average number of ride requests per zone. MyTaxiService
        has assigned the mtaxi in discussion to another city's zone
        [Exit Cnd]: MyTaxyService(B) is acknowledged by the mtaxi driver that he has received successfully
        the zone change order
        [Exceptions]:
          - Connection Lost: the mtaxi driver is immediately notified of the event
        [Flow of Events]:
          - MyTaxiService(B) forwards to the mtaxy a change zone order, since the mtaxi has been assigned to another city's zone in order to guarantee
          a more balanced distribution of mtaxies among all the city's zones
          - The driver receives the notification and displays it on myTaxiService(F)
          - The driver takes note of the new zone
          - The driver acknowledges myTaxiService(B)}

      --------------------------------------------------------------------------------

      11 A mtaxi driver reports an accident
        [Actors]: A mtaxi driver, MyTaxiService(B)
        [Pre cons]: The mtaxi driver is be able to use MYT. MYT has not been damaged and so
        is fully functional
        [Post cons]: MyTaxiService(B) considers the mtaxy not available and store the data
        relative to the accident for statical uses
        [Entry Cnd]: A mtaxy driver had an accident and wants to report it(has to report it)
        [Exit Cnd]: MyTaxiService(B) acknowledges the driver about the fact that it has received
        successfully the accident report
        [Exceptions]:
          - Connection Lost: the mtaxi driver is immediately notified of the event
        [Flow of Events]:
          - The mtaxy driver taps the "REPORT ACCIDENT" button on the screen of his MYT
