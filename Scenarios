Last update: 18/10/15
Authors: Giorgio Pea, Andrea Sessa

Scenarios/Use cases:

1) A registered user requests a mtaxi ride
  [Actors]: A registered user, MyTaxiService
  [Pre-cons]: The registered user has logged into MyTaxiService.
  [Post-cons]: MyTaxiService(B) receives the ride request and tries to find an available taxi to fulfill it.
  [Entry Cnd]: A registered user wants to be picked up by a mtaxi as soon as possible.
  [Exit Cnd]: MyTaxiService(F) is informed that MyTaxiService(B) has received successfully the ride
  request
  [Exceptions]:
    - Connection lost on the smartphone: MyTaxiService(F) immediately notifies the registered user with the last
    available waiting time for the requested ride
  [Flow of events]:
    - The registered user taps/clicks the "REQUEST TAXI" button
    - The registered user is redirected to a screen dedicated to the insertion
    of the requested ride details
    - The registered user fills out a form for the ride request, inserting the ride's starting and ending location,
    the number of passengers and the time for which be picked up.
    - The registered user submits to MyTaxiService(B) the form by clicking/tapping the "CONFIRM REQUEST" button
  [Special Requirements]:
    - MyTaxiService(F) must be informed that MyTaxiService(B) has received successfully the registered user ride
    request within 1 min
[OK]
--------------------------------------------------------------------------------

2) MyTaxiService(B) forwards a received ride request to a mtaxi driver
  [Actors]: A mtaxi driver, MyTaxiService(F)(T)
  [Pre-cons]: The mtaxi driver has informed MyTaxiService(B) that he has finished serving a passenger and so is
  ready for a new ride
  [Post-cons]: The mtaxi driver knows that a passenger has requested a ride with the specified
  details and is ready to fullfil it
  [Entry Cnd]: MyTaxService(B) has received a request for a ride from a registered user
  [Exit Cnd]: MyTaxiService(B) is informed that MyTaxiService(F)(T) has received successfully the mtaxi driver's
  notification
  [Exceptions]:
    - No mtaxi available for city zone relative to the ride request: MyTaxyService(B) tries
    to find a mtaxi that fits the request located in the adjacent zones
    - No mtaxi available: MyTaxyService(B) notifies the passenger that made the request that
    no taxi is available and he should try later
    - No ack from the mtaxi driver MyTaxiService(F)(T): MyTaxiService(B) tries to find a new mtaxi to fullfil
    the request
  [Flow of Events]:
    - MyTaxyService(B) extracts the city zone relative to the starting point of the ride request
    - MyTaxyService(B) selects a mtaxi (using a FIFO logic) from the queue of available mtaxies
      for the city zone above mentioned.
    - MyTaxyService(B) forwards the ride request to the selected mtaxi

[OK]

-------------------------------------------------------------------------------

4) A taxi driver informs myTaxiService(B) that he has finished serving a passenger
  Actors: A mtaxi driver, myTaxiService(F)
  [Pre-cons]: The mtaxi's current location is the ending location of its last ride
  [Post-cons]: MyTaxiService(B) considers the mtaxi available
  [Entry Cnd]: The mtaxi driver has finished serving a passenger
  [Exit Cnd]: MyTaxiService(F)(T) is informed that MyTaxiService(B) has received successfully the mtaxi driver's
  notification
  [Exceptions]:
    - Connection Lost: the mtaxi driver is immediately notified by MyTaxiService(F)(T), who suggests to retry the operation
    later.
  [Flow of Events]:
    - The mtaxi driver taps the "END RIDE" button on the screen of his MyTaxiServiceDevice
    - MyTaxiService(F)(T) notifies MyTaxiService(B) that the mtaxi driver has finished serving a passenger
  [Special Requirements]:
    - MyTaxiService(F)(T) must be informed that MyTaxiService(B) has received successfully the mtaxi driver notification within 1 min

[OK]

--------------------------------------------------------------------------------

5) A taxi driver manages a ride request from MyTaxiService(B)
  Actors: A mtaxi driver, MyTaxiService(B), MyTaxyService(F)(T)
  [Entry Cnd]: MyTaxiService(B) has forwarded successfully a ride request to MyTaxyService
  (F)(T)
  [Exit Cnd]: MyTaxiService(F)(T) is informed that MyTaxiService(B) has received successfully the notification
  of the ride acceptance.
  [Post cons]: The mtaxy driver has started driving to the starting point of the ride
  [Exceptions]:
    - If MyTaxyService(B) does not receive the acceptance of the request by the mtaxy driver
    within 5 mins, then it selects another mtaxi to fullfil the request, and signals to the supervisors
    of MyTaxyService the behavior of the mtaxy driver
  [Flow of Events]:
    - The mtaxy driver plans the picking up of the passenger.
    - The mtaxi driver taps the "SERVE REQUEST" button, notifying MyTaxiService(B)
    - The mtaxi driver start reaching the starting point of the ride request


--------------------------------------------------------------------------------

6) A user requests a reserved ride
  Actors: Requesting passenger, the System
  Entry Cnd: The user want requests a reserved ride, the user is logged into the system.
  Exit Cnd: The system acknowledges the assigned driver.
  Exceptions:
    - Connection Lost: The driver is immediately notified via the mobile application.
    - No taxi available: The requesting user is immediately notified via the mobile application.
  Flow of Events:
    - The user selects the origin and destination of the ride, the number of passengers and the starting time, once the form is completed, it is submitted to the System.
    - myTaxiService(B) checks if the starting time is at least 2 hours greater than the current time, if so it stores the request.
    - The System acknowledges the user.
    - When there are 10 minutes left, the system extracts a driver from the queue(calculated on the basis of the ride's starting point)
      and assigns him to the request(see use-case n4).
  Special Requirements:
    - The system must acknowledges the driver within 1 min from the submitting time of the reservation form.

--------------------------------------------------------------------------------

7) User Login
  Actors: Passenger/Driver, the System
  Entry Cnd: the user is offline and wants to log in the System
  Exit Cnd: The user is logged in
  Notes: This procedure applies both for the login from the web site
  Exceptions:
    - Connection Lost: myTaxiService(F) immediately notifies the user
    - Wrong Credentials: myTaxiService(F) asks to reenter it
  Flow of Events:
    - The user wants to log in the application he opens it on its mobile device.
    - The System asks to provide credentials and to specify the user type(driver or passenger), showing a login form.
    - The user provides the login information.
    - myTaxiService(B) authenticates the user and give access to the application functions

--------------------------------------------------------------------------------

8) User Logout
  Actors: Passenger/Driver, myTaxiService(B)
  Entry Cnd: The user is logged into myTaxiService(B); the user wants to logout from myTaxiService
  Exit Cnd: The user is logged out from myTaxiService
  Notes: This procedure applies both for the website/mobile application version of myTaxiServie
  Exceptions:
    - Connection Lost: myTaxiService(F) immediately notifies the user
  Flow of Events:
    - The user wants to log out from the application, he presses the logout button
    - myTaxiService(B) notifies the user that he has been logged out from the System.

--------------------------------------------------------------------------------

9) User undo a reservation
  Actors: Requesting passenger, myTaxiService(B)
  Entry Cnd: The passenger has reserved a ride successfully, the user is logged into the application, the passenger has reserved a taxi ride
  Exit Cnd: The System acknowledges the passenger
  Exceptions:
    - Connection Lost: myTaxiService(F) immediately notifies the user
  Flow of Events:
    - The user enters in the application area where he can see the list of reservation
    - The user selects the reservation to eliminate and press the "cancel" button
    - myTaxiService(B) acknowledges the user via myTaxiService(F)

--------------------------------------------------------------------------------

10) A driver receive a zone change order
  Actors: A taxi driver, myTaxiService(B)
  Entry Cnd: myTaxiService(B) detects(calculating the distribution of taxies among zones) that some zones have too much taxies assigned
            and some zones have a too small number of taxies assigned(or no taxies at all)
  Exit Cnd: The driver acknowledges myTaxiService(B)
  Exceptions:
    - Connection Lost: myTaxiService(F) immediately notifies the user
  Flow of Events:
    - After previous calculations based on the taxies distribution myTaxiService(B) sends a notification to the selected driver.
    - The driver receives the notification and displays it on myTaxiService(F)
    - The driver takes note of the new zone
    - The driver acknowledges myTaxiService(B)

--------------------------------------------------------------------------------

11) A driver notifies myTaxiService(B) due to an accident
  Actors: A taxi driver, myTaxiService(B)

  Entry Cnd: A driver needs to notify the system due to an accident
  Exit Cnd: myTaxiService(B) acknowledges the driver
  Exceptions:
    - Connection Lost: myTaxiService(F) immediately notifies the user
  Flow of Events
    - The driver hits the 'notify accident' button
    - myTaxiService(B) receives the notification and set the driver state to 'unavailable'
    - myTaxiService(B) acknowledges the driver

--------------------------------------------------------------------------------

12) Visitor registration
  Actors: Visitor, myTaxiService(B)
  Entry Cnd: The visitor is not yet registered
  Exit Cnd: The visitor is registered
  Notes: This procedure doesn't apply for driver registration(see Assumptions point 1)
         This procedure applies both for the registration via mobile application and web site
  Exceptions:
    - Connection Lost: myTaxiService(F) immediately notifies the user
  Flow of Events:
    - The visitor access the registration area
    - The visitor enters Name, Surname, Username, email(used for user verifiacation) and finally chooses a password
    - The visitor press the submit button
    - myTaxiService(B) receive the registration request and sends to the user a email containing a link to activate the account
    - The visitor opens the email clicks the activation link
    - The visitor visualizes the message "You've been successfully registered to myTaxiService!"

Requirements(Functional -> F, Non Functional -> NF, Constraints -> C):
  1) The user can undo a request (F)
  2) The system has to guarantee that a taxi arrives at the origin of the ride within a fixed time(NF)
  3) The user has to specify the origin of the ride(F)
  4) The taxi driver waits for the passenger that has requested the ride at the origin point for a maximum amount of time, after that the taxi returns available(NF)
  5) The user has to specify the time of departure when he reserves a taxi(F)
  6) A taxi that joins this service has to mount a GPS system(to specify)(C)
  7) The System uses the GPS information to determinate if a taxi is in service(F)
  8) A taxi driver has to accept or not a request within a fixed time, otherwise the request is rejected(NF)
  9) The System puts the user in a waiting list if no taxi is available(F) -> Scenario
  10) The user can undo a reservation within 10 minutes from the meeting time(NF)
  11) The taxies that partecipate to the service can only manage request and reservation from myTaxiService(C) -> ??
