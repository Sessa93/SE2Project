1) INTRODUCTION
  1.1) Purpose
    This document represent the Requirement Analysis and Specification Document
    (RASD). The main goal of this document is to completely describe the system
    in terms of functional and non-functional requirements, to show the constraints and the limit
    of the software and simulate the typical use cases that will occur after the
    development. This document is intended to all developer and programmer who
    have to implement the requirements, to system analyst who want to integrate
    other system with this one, and could be used as a contractual basis between
    the customer and the developer.

  1.2) Scope of the project
    The aim of this project is to develop myTaxiService, a web/mobile application that makes easier and quicker taking taxies.
    Thanks to MyTaxiService, anyone can request or book a taxi and get realtime information
    about how long it will take to be picked up or about taxi's current position and code.
    In addition, MyTaxiService provides an efficient way to allocate taxies by dividing the
    city in zones and using a queue based allocation system, in order to reduce the
    waiting time and city's traffic.

    1.3) Goals
      In this subsection we describe a set of high level goals that myTaxiService is proposed to achieve.

      1. Simplify and speed up the process of taking a taxi
        1.1 When a user has entered his taxi ride details and clicks or taps
        the request button, then MyTaxiService will find the first
        available taxi that fits for the inserted ride details, booking it to the user

      1.2 When a user has entered his taxi reservation details and clicks or taps
        the book button, then MyTaxiService will book a taxi that fits for the
        inserted booking details and for the indicated meeting time

      2. Guarantee an efficient and fair management of taxi queues
        2.2 Guarantee a right distribution of taxies in the city

        2.3 Guarantee short taxi availability times and short waiting times

    1.4) Glossary

      1.4.1) Terms disambiguation
        - MyTaxiService(F) : The front end of MyTaxiService, that is to say, the components
          of the application that manage the interaction with the user and the logic behind
          this interaction
        - MyTaxiService(B) : The back end of MyTaxiService, that is to say, the components
          of the application that manage the forwarding of the ride / reservation request with all
          their associated notifications, the search of available taxies compatible with the request/reservation inserted, and other internal
          tasks not exposed to the user or the taxies
        - MyTaxiService: MyTaxiService(F) + MyTaxiService(B)
        - Taxi driver: The person licensed to drive a Taxi.
        - Taxi(with capital T): a taxi that uses MyTaxiService
        - Request: An electronic message sent by a user through MyTaxiService(F)
          to MyTaxiService(B). This electronic message refers to the case in which the user wants to be picked up as soon as possible by a taxi.
        - Reservation: An electronic message sent by a user through MyTaxiService(F)
           to MyTaxiService(B). This electronic message refers to the case in which the user wants to be picked up by a taxi at a specific time.
        - Zone: An area of the city.
        - Credentials: A combination of username and password, used by a registered user to access the myTaxiService application.
        - Taxi ride: A movement of people, through a taxi cab, from one geographical point to another
        - Queue: A data structure managed with a FIFO policy.
        - User: A person who wants to take a taxi and is not registered to MyTaxiService.
        - Registered User: A person who needs to take a taxi and is registered to MyTaxiService.

      1.4.2) Acronyms
        - RASD: Requirements Analysis and Specification Document
        - FIFO: First In First Out

    1.5) Reference Documents
      - Specification Document: MyTaxiService-AA2015-2016.pdf
      - IEEE Std 830-1998 IEEE Recommended Practice for Software Requirements Specifications.
      - IEEE Std 1016 tm -2009 Standard for Information Tecnology-System Design-Software Design Descriptions.
      PRELIMINARY ASSUMPTIONS
    ASSUMPTIONS
      1. MyTaxiService has been commissioned by the city local government.
        Each taxi in the city must have a taxi license provided by the local government. This license requires the registration to the myTaxiService
        and forces drivers to accept ride request/reservations only using MyTaxiService.
        During the registration process taxi drivers are asked to provide their personal and vehicle data and work time table.
        At the end of the registration process a unique code will be assigned to each taxi.
        Eventually, the city's local government provides each taxi a device. This device is used to see incoming ride requests or reservations
        and to signal their acceptance

        2. Since MyTaxiService is aware of the work timetable of each taxi and GPS data, taxies are considered unavailable
        if and only if they are serving a ride/reservation request.  After a taxi has finished serving a passenger he has to notify that
        to myTaxiService and so myTaxiService will consider the taxi available again. Considering that myTaxiService knows the position
        of the taxi and the destination of each ride there is no chance a taxi drive can cheat by not signalling he hasn't yet finished service a passenger.

        2.a A Taxi might have an accident, if that happens, the taxi driver can report it and so the taxi
        is considered unavailable.

        3. Once a user sends a ride request, he or she cannot change any detail of the request nor can
          undo the request.

        4. MyTaxiService is aware of the characteristics of each taxies (number of passengers)

        5. MyTaxiService is aware of all the possible valid location in the city, so the user is forced to select one of them and not insert one of them.

        6. Taxi can accept only ride reservation/request within the city borders.

        7. Accepting a ride/reservation request by the taxi driver: signaling that the taxi has already left in order to pick a registered user up.

        8. Visitor: A generic person that is not registered to the service.

        9. Exists an unique application(myTaxiService(F)) both for taxi driver and normal user, myTaxiService(F) give access to the proper set of functionalities
        according to the login credentials.

        10. Exists an unique application(myTaxiService(F)) both for taxi driver and normal user, myTaxiService(F) give access to the proper set of functionalities
        according to the login credentials.


    REQUIREMENTS SPECIFICATION
      2.1)Main Actors
      In this section are defined all the actors that interact with the myTaxiService during its operation.
        - Visitor
            A user can only see the login page and complete the registration(which is mandatory to use the service)
            to be able to access to all the functionality of the application.

        - Registered User
            A registered user can, after a successful login, access all the functionality of the application: it can
            request/reserve a taxi ride, view the status of older reservations and cancel a already confirmed taxi reservation.

        - Taxi driver
            A taxi driver, after a successful login, is granted to: being notified by the system of an incoming request,
            notify the system about the conclusion of a taxi ride.

        - MyTaxiService(B)
            This actor represents the back-end part of the myTaxiService software system as described in the Glossary

      2.2)FUNCTIONAL REQUIREMENTS
        [FR1] Visitor must not be already registred to perform registration process.
        [FR2] Visitor must choose a username not already used by another user.
        [FR3] Visitor can only access to registration form.
        [FR4] User can not sign up twice but only once for session.
        [FR5] The login is successful iff the user inserts the correct credentials
        [FR6] The user, after a successful login can submit a taxi request
        [FR7] The user, after a successful login can submit a taxi reservation
        [FR8] The user can undo a reservation
        [FR9] The user has to specify the origin of the ride(F)
        [FR10] The driver can accept or reject a request
        [FR11] The user has to specify the time of departure when he reserves a taxi(F)
        [FR12] myTaxiService uses the GPS information to determinate if a taxi is in service(F)
        [FR13] The user can undo a reservation within 10 minutes from the meeting time(NF)
        [FR14] The user can make multiple reservations
        [FR15] Users, after a successfull login, can view the status of previous reservations
        [FR16] myTaxiService(B) can send request to the taxi to redistribute the taxies among the queues

      2.3) NON FUNCTIONAL REQUIREMENTS
        [NFR1] The system has to guarantee that a taxi arrives at the origin of the ride within a fixed time(NF)
        [NFR2] The taxi driver waits for the passenger that has requested the ride at the origin point for a maximum amount of time, after that the taxi returns available(NF)
        [NFR3] A taxi driver has to accept or not a request within a fixed time, otherwise another taxi is selected by myTaxiService(B)
        [NFR4] After a failure myTaxiService(B) has to be restarted within 1 hour
        [NFR5] myTaxiService must be available 24/7
        [NFR6] myTaxiService has as target users taxi driver and people who use the city taxi service
        [NFR7] Users are able to properly use all the functionalities after a training time of at most 1 hour
        [NFR8] All the functionalities have be reached by the user with at most 3 clicks from the starting page


      2.4) CONSTRAINTS
        [C1] A taxi that joins this service has to mount a GPS system
        [C2] The taxies that partecipate to the service can only manage request and reservation from myTaxiService

      2.5) DOMAIN PROPERTIES
        [D1] Time must be included between 00.00 and 23.59.
        [D2] Email address used for registration must be formally correct.

3)Scenarios + UML Diagrams
    3.1) Scenarios identification
        1)Funes is a product manager with a very busy schedule. At 11.00 he has a meeting
          with a group of clients to discuss about the features of a new product he's following
          this meeting is located non in the company headquartes, where is in the moment, but in another place.
          He used to take a lot of taxies and he tried myTaxiService to efficient its movements.
          Its half past ten and Funes decides to take a taxi via myTaxiService. So it opens the app
          on its smartphone, the app remebers he's logged and does not ask him to do it another
          time, it inserts the address of the company, one passenger is fine, and it taps
          the big request button. The app signals to him that is finding a taxi. Near
          Funes location a taxi has finished serving a passengers myTaxiService signals him
          funes request, Incapax the taxi driver wants to take a cofee even if is in work time
          so he does not answer the request. After 5 min myTaxiService tries to find a new taxi
          for Funes and it does so successfully, Becero's taxi is selected, Becero's immediatly signals
          is serving the request and myTaxiService alerts funes that its taxi will arrive in 3 mins.
          The taxi arrives and in 10 min funes is in the company in time for the meeting. MyTaxiService
          signals the behaviour of Incapax to its supervisors and he receives a warning and a fine of 200€

        2) It's monday morning and Bob, an important manager of a very big company, as to attend an important
           conference on Tuesday at 9:00 AM. Unfortunately he has no one
           to take him to the airport on Tuesday morning, also he is very worried to miss his flight tomorrow
           morning due to the lack of available taxi(Tuesday morning is a terrible day!).
           If he will miss the conference, his boss will fire him! Suddenly he remember that the myTaxiService
           application give him the possibility to reserve a taxi ride.
           He pick-up his smartphone, opens the myTaxiService app, enters his credentials and access to the application.
           On the main page he press the 'Reserve' button, a form appear and he enters the time of departure, the point of departure
           and the number of passengers(he himself) then he press the 'Submit' button. The myTaxiService backend receives the request
           and after some calculus notify Bob of the successful registration of its request. Bob is very happy and continues
           its work with a smile on his face.

        3) It's Friday, 11 AM and Ann has been on holiday for three weeks. It's time to go home!
           Ann has booked her return flight for today at 12 AM. Ann has carefully planned the return trip, indeed
           yesterday she made a taxi ride reservation through the myTaxiService web site, but the taxi is in late!
           So she take her smartphone opens the myTaxiService application, enters her credentials and after a successful login
           she presses the 'View Status' button and discovers that her taxi is stuck in a terrible traffic jam.
           "I'll miss my flight!" she thinks, and starts to wait with the heart full of hope.

        4) Dave, an experienced taxi driver of big city, have received, through myTaxiService, a request for a ride
           from a passenger. "It's not too much far from where i am now" he thinks, "It'll be easy" and through the
           myTaxiService mobile application it notifies the system the he will take care of the call.
           So he starts moving toward the passenger position, but suddenly, while he is crossing a very busy crossroad,
           a reckless driver coming from the left crosses at high speed the crossroads and hits with violence the
           taxi cab of the poor Dave. Fortunately nobody gets hurt but the taxi of Dave has been seriously damaged.
           Dave cannot fulfill the passenger request so he takes his smartphone, opens the myTaxiervice application,
           sets his state to 'Critical' and press the 'Submit' button. The backend system of myTaxiService receives the
           notification and after some calculus selects and notifies another driver to fulfill the passenger request.

        5) Mike, a taxi driver friend of Dave, is driving in a very busy Wednesday afternoon. A passenger, Bob, is walking
           in the same zone where Mike is. Bob is in hurry because he needs to reach the railway station of the city.
           "I need a taxi!" Bob thinks, so he takes his smartphone, opens myTaxiService app, enters his credentials and
           after a successful login press the 'Request' button. MyTaxiService(B) receives the request and, after having
           carefully analysed the situation, select Mike to fulfill the request. Unfortunately Mike is stuck in very bad
           traffic jam, Mike receives and displays the request through the myTaxiService mobile application but Mike thinks
           that he can't reach the passenger before 30 minutes, so he rejects the request by pressing the 'Reject' button.
           The back-end of myTaxiService acknowledges the driver and start calculating another possible driver to fulfill the request.

        6) Ann, the girlfriend of Bob, is going to take a trip to Milano with his boyfriend during the weekend.
           She has carefully planned all the journey and she has already reserved a taxi ride for Saturday morning.
           Unfortunately the unpredictable Bob has decided that no taxi is needed: they will take the car!
           So Ann needs to cancel the reservation, he opens the myTaxiService application, enters his credentials and after
           a successful login visualizes the list of the reservations, select the correct reservation and press the
           'Remove' button, myTaxiService(B) receives the notification and acknowledge the driver.

        7) It's Thursday, 14:00 and George, a young taxi driver, is driving in the city centre.
           He has recognized many colleagues driving in the same zone, "Too many taxi for few people".
           Meanwhile myTaxiService(B) after some calculus on GPS data recognizes that there are to many taxies
           in the zone where George is driving and no request is coming from that zone. The system also indentifies
           some zones of the city where there are a small number of taxies. According to some statistical data
           the system knows the within 1 hour many request may come from those zones. So myTaxiService(B) selects a
           group of 10 taxies, including George, that have to moves from the centre zone then it sends them a notification.
           George reads the notification on his smartphone through the myTaxiService application, ackonowledges the system,
           and starts moving toward the indicated zone.
