1) INTRODUCTION
  1.1) Purpose
    This document represent the Requirement Analysis and Specification Document
    (RASD). The main goal of this document is to completely describe the system
    in terms of functional and non-functional requirements, to show the constraints and the limit
    of the software and simulate the typical use cases that will occur after the
    development. This document is intended to all developer and programmer who
    have to implement the requirements, to system analyst who want to integrate
    other system with this one, and could be used as a contractual basis between
    the customer and the developer.

  1.2) Scope of the project
    The aim of this project is to develop a new software-based taxies management service called myTaxiService.
    The software has to improve the older human-based system in which the management of passengers request is
    up to the taxi driver itself.
    In order to do this the software system has to guarantee a simplified access of passengers to the service;
    A passenger can request a taxi ride via a simple mobile application, or he/she can reserve a
    a ride by specifying the time and place of departure.
    The system also has the scope to guarantee a "fair" management of the request distribution among the available taxies.
    The driver of a taxi, who subscribes himself to the myTaxiService, is notified, via an appropriate mobile application,
    of the incoming request by the passengers.

    1.3) Goals
      In this subsection we describe a set of high level goals that our project is proposed to reach.

      [G1] - The myTaxiService system has to simplify the access of passengers to the taxi service.
             Simplify means that the user can request a taxi ride from every point of the city, the passenger
             has not to find a taxi instead is the taxi that finds the passenger.

      [G2] - The myTaxiService system has to guarantee a fair(optimal) management of the taxi queue.
             The city is divided in zones of equal area(e.g. 2km^2), to each zone is associated a queue of taxi.
             When a taxi becomes available its identifier is stored, according to the GPS data, in the corresponding queue.
             A fair management means that:
              - Each taxi is equal to another one, from the system perspective.
              - Each queue has to be managed through a true FIFO policy

    1.4) Glossary

      1.4.1) Terms disambiguation
        - Taxi driver: The person who is licensed to drive a taxi cab
        - The System: The back-end software component of myTaxiService, who dispatches the requests coming from the mobile app to the available taxi drivers
        - Request: An electronic message sent by a registered user through the myTaxiDriver mobile application
          to the System, it contains all the information needed to send a taxi to the requesting passenger
        - Zone: A square area, each taxi driver is assigned to a specific zone, the city is divided in zone
        - Mobile Application: The front-end software component of myTaxiService, available both to the user and taxi driver.
        - Credentials: A combination of username and password, used by a registered user to access the myTaxiService application.
        - Taxi ride: A movement of people, through a taxi cab, from one geogrphical point to another
        - Queue: A data structure managed with a FIFO(First in First Out) policy.
        - Taxi identifier: how we choose a valid identifier for a taxi? <- TARGA?

      1.4.2) Acronyms
        - RASD: Requirements Analysis and Specification Document
        - FIFO: First In First Out

    1.5) Reference Documents
      - Specification Document: MyTaxiService-AA2015-2016.pdf
      - IEEE Std 830-1998 IEEE Recommended Practice for Software Requirements Specifications.
      - IEEE Std 1016 tm -2009 Standard for Information Tecnology-System Design-Software Design Descriptions.

2) REQUIREMENTS SPECIFICATION
  2.1) Main Actors(Spostare nella sezione centrale)
    In this section are defined all the actors that interact with the myTaxiService during its operation.
      - Visitor
          All visitor users can only see the login page and complete the registration(which is mandatory to use the service)
          to be able to access to all the functionality of the application.

      - Registered User
          This type of user, after a successful login, is granted to access all the functionality of the application:
          request/reserve a taxi ride, view the status of older reservations and cancel a already confirmed taxi reservation.

      - Taxi driver
          This type of user, after a successful login, is granted to: being notified by the system of an incoming request,
          notify the system about the conclusion of a taxi ride.

      - (The BackEnd System ???)
          This actor represent the back-end part of the myTaxiService software system, its main purpose is to forward request
          coming from users to a taxi available in the zone, also it has to collect informations relative to the availability
          of the taxi drivers.

    2.2) Assumption

    2.3) Functional Requirements

    2.4) Non Functional Requirements

    2.5) Constraints

    2.6) Jackson-Zave approach

3) Scenarios definition - Use Case diagram
