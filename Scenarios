Last update: 18/10/15
Authors: Giorgio Pea, Andrea Sessa

Scenarios/Use cases:

1) A passenger requests a taxi ride
  [Actors]: the requesting passenger, the myTaxiService application
  [Pre-cons]: the passenger has access to the myTaxiService application; the passenger
  has access to the web from the device used to access the application; the passenger is
  registered to myTaxiService as a passenger. The passenger wants to start the ride in less
  than two hours
  [Post-cons]: the taxi will arrive at the requested location as punctual as possible with
  respect to the requested time
  [Entry Cnd]: the passenger is willing to take a taxi. the passenger
  [Exit Cnd]: the application acknowledges the passenger that a taxi is available and shows
  the waiting time for the taxi along with a button to undo the taxi ride request.
  [Exceptions]:
    - Connection lost: The mobile application immediately notifies the user.
  [Flow of events]:
    - The passenger logs into the app
    - The passenger hits the 'request ride' button
    - The passenger fills and sends the request ride form by inserting the starting location, the ending location,
    the time in which a taxi has to be ready and the number of passengers.
    - The myTaxiService app aknowledges the passenger about its request by showing to him
    the time before a taxi will be available, and if a taxi is available, the taxi arrival time.
    If a taxi is not available the myTaxiService will let the user undo its ride request
  [Special Requirements]:
    - The user must be notified about the state of the request within 30 seconds from the submitting time.

--------------------------------------------------------------------------------

2) A taxi driver receives a ride request by the myTaxiService application
  [Actors]: a taxi driver, the myTaxiService application
  [Pre-cons]: the taxi driver has access to the myTaxiService application; the taxi driver
  has access to the web from the device used to access the application; the taxi driver is
  registered to myTaxiService as a driver; the taxi driver owns and uses on his taxi
  a gps system that provided by the myTaxiService application to respond to taxi ride
  requests; the taxi driver has signaled via the app that has finished serving a passenger and is
  ready for a new ride
  [Post-cons]: the taxi driver knows that a passenger has requested a ride with the specified
  details and has to accept it or not
  [Entry Cnd]: the myTaxService app has received a request for a ride from a passenger
  [Exit Cnd]: The System notifies the selected taxi driver
  [Exceptions]:
    - No taxi available: if the queue relative to taxi zone of the request is empty(no taxi available)
    then the myTaxiService back-end uses the queue of one of the zones adjacent to the one we're considering
    - No ack from the selected driver's app: the system repeats the forwarding of the request
  [Flow of Events]:
    - the myTaxiService back-end receives a ride request, calculates the taxi zone of the starting point of the ride
      and extracts a taxi (using a FIFO logic) from the queue of taxies associated with the taxi zone and forwards to that taxi the ride request.
    - the myTaxiService back-end notifies the selected taxi's driver of a new ride request along with all the details relative to it.


    {Here we model just the fact that a ride request is forwarded to a taxi driver and that that taxi driver
    receives it with success}
    {We'll use another scenario to model the fact that a taxi driver that has received a ride request
    accepts or not that request}
    {When a taxi driver signals it has finished a ride(and this is mandatory) then we consider the
    taxi available for a new ride, the system knows the work turn of each taxi driver so that a taxi
    driver can't be non available when it has completed a ride}
    {When a taxi driver receives a ride request he has only to signal the fact that is reaching the passenger
    , it cannot decline a ride request, if the taxi driver does not signal is reaching the passenger
    within a certain time than the systems uses another taxi and signals what happened to the admins}
--------------------------------------------------------------------------------

3) A taxi(driver) informs the system of his availability
  Actors: A taxi driver, the System
  Entry Cnd: The driver starts his shift
  Exit Cnd: The driver receives an acknowledgement from the system
  Exceptions:
    - Connection Lost: The driver is immediately notified via the mobile application.
  Flow of Events:
    - The mobile app access automatically to the GPS system, retrieves the current position, and sends the data to the System
    - The System receives the positioning data, calculates the zone, stores the taxi ID in the queue associated to the calculated zone
      and recalculates the distribution of taxies over the zones.
    - The System acknowledges the driver.
  Special Requirements:
    - The system must notifies the driver within 1min from the submitting time

--------------------------------------------------------------------------------

4) A taxi driver informs the system that he has terminated a ride
  Actors: Taxi(driver), the System
  Entry Cnd: The driver has terminated a ride, the driver is logged into the System
  Exit Cnd: The system acknowledges the driver
  Exceptions:
    - Connection Lost: The driver is immediately notified via the mobile application.
  Flow of Events:
    - The driver sets his current state to 'available'(glossary?), when the user submit the notification the mobile app access to GPS system,
      retrieves the current position and attach the positioning information to the notification.
    - The System receives the positioning data, calculates the zone, stores the taxi ID in the queue associated to the calculated zone
      and recalculates the distribution of taxies over the zones.
    - The System acknowledges the driver.
  Special Requirements:
    - The system must notifies the driver within 1min from the submitting time

--------------------------------------------------------------------------------

5) The driver receives a request
  Actors: Taxi driver, the System
  Entry Cnd: The System submit to the driver a new request
  Exit Cnd: The driver acknowledges the System
  Exceptions:
    - The passenger is not present at starting point of the ride.
  Flow of Events:
    - The driver receives a new request via the mobile application.
    - The driver takes note(?) of the information(position, time, starting point, ending point, number of passengers) contained in the request.
    - The driver acknowledges the system.
    - The driver reaches the origin point of the ride.
  Special Requirements:
    - The driver must acknowledge the system within 5min otherwise the System assumes that the driver is out of service and proceeds to select another taxi to fullfill the request.
    - The driver waits at the starting point of the ride at most 30 min.

--------------------------------------------------------------------------------

6) A user requests a reserved ride
  Actors: Requesting passenger, the System
  Entry Cnd: The user want requests a reserved ride, the user is logged into the system
  Exit Cnd: The system acknowledges the assigned driver
  Exceptions:
    - Connection Lost: The driver is immediately notified via the mobile application.
    - No taxi available: The requesting user is immediately notified via the mobile application.
  Flow of Events:
    - The driver logs into myTaxiService mobile application, providing his credentials.
    - The user selects the origin and destination of the ride, the number of passengers and the starting time, once the form is completed, it is submitted to the System.
    - The System checks if the starting time is at least 2 hours greater than the current time, if so it stores the request.
    - The System acknowledges the user.
    - When there are 10 minutes left, the system extracts a driver from the queue(calculated on the basis of the ride's starting point)
      and assigns him to the request(see use-case n4).
  Special Requirements:
    - The system must acknowledges the driver within 1 min from the submitting time of the reservation form.

--------------------------------------------------------------------------------

7) User Login
  Actors: User, the System
  Entry Cnd: the user is offline and wants to log in the System
  Exit Cnd: The user is logged in
  Exceptions:
    - Connection Lost: The mobile application immediately notifies the user
    - Wrong Credentials: The mobile application ask to reenter it
  Flow of Events:
    - The user wants to log in the application he opens it on its mobile device.
    - The System asks to provide credentials and to specify the user type(driver or passenger), showing a login form.
    - The user provides the login information.
    - The System authenticates the user and give access to corresponding front-end

--------------------------------------------------------------------------------

8) User Logout
  Actors: User, the System
  Entry Cnd: The user is logged into the system
  Exit Cnd: The user is logged out from the system
  Exceptions:
    - Connection Lost: The mobile application immediately notifies the user
  Flow of Events:
    - The user wants to log out from the application, he presses the logout button
    - The System notifies the user that he has been logged out from the System.

--------------------------------------------------------------------------------

(5 A request is rejected) <- Scenario?

(6 No taxi available) <- Scenario?

The System <-> myTaxiService back end

Requirements(Functional -> F, Non Functional -> NF, Constraints -> C):
  1) The user can undo a request (F)
  2) The system has to guarantee that a taxi arrives at the origin of the ride within a fixed time(NF)
  3) The user has to specify the origin of the ride(F)
  4) The taxi driver waits for the passenger that has requested the ride at the origin point for a maximum amount of time, after that the taxi returns available(NF)
  5) The user has to specify the time of departure when he reserves a taxi(F)
  6) A taxi that joins this service has to mount a GPS system(to specify)(C)
  7) The System uses the GPS information to determinate if a taxi is in service(F)
  8) A taxi driver has to accept or not a request within a fixed time, otherwise the request is rejected(NF)
  9) The System puts the user in a waiting list if no taxi is available(F) -> Scenario
  10) The user can undo a reservation within 10 minutes from the meeting time(NF)
  11) The taxies that partecipate to the service can only manage request and reservation from myTaxiService(C) -> ??

Goals:
  1) A fair management of the taxi queue
  2) Possibility to request a taxi ride
  3) Possibility to reserve a taxi ride

Assumptions:
  1) One application both for requesting passengers and taxi drivers, when a user logs into the mobile application must provide the type of user.


Questions:
  1) Fair?
  2) Pre-conditions? Post-conditions?
  3) Registration?
